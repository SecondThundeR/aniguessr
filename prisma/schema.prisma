generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

// Next Auth Models
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    created_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    // idk, but for some reason it fails sometimes, so make optional
    user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    games         Game[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Application Models
// `Animes` Field Example: "[{ id: 1, name: "..."}, ...]"
// `Answers` Field Example: "[{ correct: { id: 1, name: "..." }, picked: {id: 727, name: "..." } }, ...}]"
// If correct answer: { correct: null, picked: {id: 1, name: "..."} }
// If wrong answer: { correct: {id: 1, name: ""}, picked: {id: 727, name: "..."} }
model Game {
    id                String   @id @default(cuid())
    amount            Int
    isFinished        Boolean  @default(false)
    animes            String
    answers           String?
    currentAnimeIndex Int      @default(0)
    user              User     @relation(fields: [userId], references: [id])
    userId            String
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
}
